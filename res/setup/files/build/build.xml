<project name="third party project build" default="start" basedir=".">
	<target name="start">
		<echo message="Setting up basic properties..." />

		<property file="build.properties" />
		<property name="build.date.pattern" value="MMM-dd-yyyy" />
		<property name="build.time.pattern" value="HH:mm:ss" />
		<property name="build.user" value="${user.name}" />

		<property name="comp.name" value="iquesters" />

		<property name="proj.root" location="../.." />
		<property name="proj.dir" location=".." />

		<scriptdef name="substring" language="javascript">
			<attribute name="srcstring" />
			<attribute name="substring" />
			<attribute name="property" />
			<![CDATA[
				var srcString = attributes.get("srcstring");
				var subString = attributes.get("substring");
				var start = subString.length()+1;
				var end = srcString.length();
				project.setProperty(attributes.get("property"), srcString.substring(start, end));
			]]>
		</scriptdef>
		<substring srcstring="${proj.dir}" substring="${proj.root}" property="proj.name" />

		<property name="src.dir" value="${proj.dir}/src" />
		<property name="gen.dir" value="${proj.dir}/gen" />
		<property name="web.dir" value="${proj.dir}/web" />
		<property name="lib.dir" value="${proj.dir}/lib" />
		<property name="res.dir" value="${proj.dir}/res" />
		<property name="sql.dir" value="${proj.dir}/sql" />

		<tstamp>
			<format property="build.date" pattern="${build.date.pattern}" />
			<format property="build.time" pattern="${build.time.pattern}" />
		</tstamp>

		<echo message="Initiating ${proj.name} build..." />
		<echo message="Project Location      : ${proj.dir}" />
		<echo message="Distribution Location : ${dist.dir}/${proj.name}" />
		<echo message="Build Date            : ${build.date}" />
		<echo message="Build Time            : ${build.time}hrs" />
		<echo message="Build By              : ${build.user}" />

		<echo message=" " />
		<echo message="Reading version properties..." />

		<!--Reading the existing version number-->
		<property file="${src.dir}/org/iq/version/version.properties" />

		<echo message="Existing version : ${version.number}" />

		<!--Updating the existing version's build number-->
		<propertyfile file="${src.dir}/org/iq/version/version.properties">
			<entry key="version.build.number" type="int" default="${version.build.number}" operation="+" />
		</propertyfile>

		<!--Creating new version's build number properties-->
		<propertyfile file="new-build-number.properties">
			<entry key="new.version.build.number" type="int" default="${version.build.number}" operation="+" />
		</propertyfile>

		<!--Reading the updated version number-->
		<property file="new-build-number.properties" />

		<!--Deleting new version's build number properties-->
		<delete file="new-build-number.properties" />

		<property name="build.version" value="${version.major}.${version.minor}.${version.patch}.${version.hotfix}" />
		<property name="build.dev.version" value="${version.major}.${version.minor}.${version.patch}.${version.hotfix}.${new.version.build.number}" />

		<echo message=" " />
		<echo message="Build Version: ${build.version}" />
		<echo message="Build Dev Version: ${build.dev.version}" />
		<echo message=" " />

		<delete dir="${dist.dir}/${proj.name}" />


		<!-- Copying required supporting libraries to ${dist.dir}/${proj.name}/temp/lib -->
		<antcall target="copy.libraries" />

		<!-- Compiling app classes to ${dist.dir}/${proj.name}/temp/bin -->
		<antcall target="compile.java.files" />

		<!-- Building app jar to ${dist.dir}/${proj.name}/temp/lib -->
		<antcall target="build.app.jar" />

		<!-- Building app services jar ${dist.dir}/${proj.name}/temp/lib -->
		<antcall target="build.app.services.jar" />

		<!-- Building app actions jar ${dist.dir}/${proj.name}/temp/lib -->
		<antcall target="build.app.actions.jar" />

		<!-- Building app conf jar to ${dist.dir}/${proj.name}/temp/lib -->
		<antcall target="build.app.config.jar" />

		<!-- Copying app web content to ${dist.dir}/${proj.name}/temp/web -->
		<antcall target="copy.app.web.content" />

		<!-- ADDING CONTENT FROM THE CORE WAR -->

		<!-- Extracting core war contents to ${dist.dir}/${proj.name}/temp/war-contents -->
		<antcall target="extract.core.war" />

		<!-- Copying core lib content to ${dist.dir}/${proj.name}/temp/lib -->
		<antcall target="copy.core.lib.content" />

		<!-- Copying core web content to ${dist.dir}/${proj.name}/temp/web -->
		<antcall target="copy.core.web.content" />


		<!-- Building app war to ${dist.dir}/${proj.name}/war -->
		<antcall target="build.app.war" />

		<!-- Copying db scripts (if any) to ${dist.dir}/${proj.name}/sql -->
		<antcall target="copy.db.scripts" />

		<!-- Copying readme.txt to ${dist.dir}/${proj.name} -->
		<!-- <antcall target="copy.readme.txt">
		</antcall> -->

		<!-- Copying license to ${dist.dir}/${proj.name} -->
		<!-- <antcall target="copy.license">
		</antcall> -->

		<!-- <delete dir="${dist.dir}/${proj.name}/temp" /> -->

		<!--FOR DEV-->
		<!-- <antcall target="dev.copy.war" /> -->
		<!--FOR DEV-->

	</target>

	<!-- Copying required supporting libraries to ${dist.dir}/${proj.name}/temp/lib -->
	<target name="copy.libraries">
		<!-- Copying required supporting libraries to ${dist.dir}/${proj.name}/temp/lib -->
		<echo message="Copying required supporting libraries to ${dist.dir}/${proj.name}/temp/lib" />
		<copy todir="${dist.dir}/${proj.name}/temp/lib" verbose="true">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<!-- Compiling app classes to ${dist.dir}/${proj.name}/temp/bin -->
	<target name="compile.java.files">
		<!-- Preparing classpath reference variable based on jars present in ${dist.dir}/${proj.name}/temp/lib -->
		<echo message="Preparing classpath reference variable based on jars present in ${dist.dir}/${proj.name}/temp/lib" />
		<path id="project.classpath">
			<fileset dir="${dist.dir}/${proj.name}/temp/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<!-- Preparing source path reference variable -->
		<path id="src.path">
			<pathelement location="${src.dir}" />
			<pathelement location="${gen.dir}" />
		</path>

		<!-- Compiling java files -->
		<echo message="Using Java version ${ant.java.version}." />
		<mkdir dir="${dist.dir}/${proj.name}/temp/bin" />
		<javac
			destdir="${dist.dir}/${proj.name}/temp/bin"
			classpathref="project.classpath"
			debug="true"
			debuglevel="lines,vars,source"
			includeantruntime="false">
			<src refid="src.path" />
		</javac>

		<!-- Copying other resource files present in ${src.dir} to ${dist.dir}/${proj.name}/temp/bin -->
		<echo message="Copying other resource files present in ${src.dir} to ${dist.dir}/${proj.name}/temp/bin" />
		<copy todir="${dist.dir}/${proj.name}/temp/bin" verbose="true">
			<fileset dir="${src.dir}">
				<include name="**/**" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- Building app jar to ${dist.dir}/${proj.name}/temp/lib -->
	<target name="build.app.jar">
		<!-- Building the app jar and placing it in ${dist.dir}/${proj.name}/temp/lib -->
		<jar destfile="${dist.dir}/${proj.name}/temp/lib/${proj.name}-${build.version}.jar" basedir="${dist.dir}/${proj.name}/temp/bin">
			<include name="**" />
			<exclude name="com/iq/${proj.name}/service/**" />
			<exclude name="com/iq/${proj.name}/action/**" />
			<manifest>
				<attribute name="Implementation-Title" value="${proj.name}-${build.version}.jar" />
				<attribute name="Implementation-Vendor" value="${comp.name}" />
				<attribute name="Implementation-Version" value="${build.version}" />
				<attribute name="Development-Version" value="${build.dev.version}" />
				<attribute name="Implementation-Date" value="${build.date} ${build.time}" />
			</manifest>
		</jar>
	</target>

	<!-- Building app services jar ${dist.dir}/${proj.name}/temp/lib -->
	<target name="build.app.services.jar">
		<!-- Building the app services jar and placing it in ${dist.dir}/${proj.name}/temp/lib -->
		<jar destfile="${dist.dir}/${proj.name}/temp/lib/${proj.name}-${build.version}-services.jar" basedir="${dist.dir}/${proj.name}/temp/bin">
			<include name="com/iq/${proj.name}/service/**" />
			<manifest>
				<attribute name="Implementation-Title" value="${proj.name}-${build.version}-services.jar" />
				<attribute name="Implementation-Vendor" value="${comp.name}" />
				<attribute name="Implementation-Version" value="${build.version}" />
				<attribute name="Development-Version" value="${build.dev.version}" />
				<attribute name="Implementation-Date" value="${build.date} ${build.time}" />
			</manifest>
		</jar>
	</target>

	<!-- Building app actions jar ${dist.dir}/${proj.name}/temp/lib -->
	<target name="build.app.actions.jar">
		<!-- Building the app actions jar and placing it in ${dist.dir}/${proj.name}/temp/lib -->
		<jar destfile="${dist.dir}/${proj.name}/temp/lib/${proj.name}-${build.version}-actions.jar" basedir="${dist.dir}/${proj.name}/temp/bin">
			<include name="com/iq/${proj.name}/action/**" />
			<manifest>
				<attribute name="Implementation-Title" value="${proj.name}-${build.version}-actions.jar" />
				<attribute name="Implementation-Vendor" value="${comp.name}" />
				<attribute name="Implementation-Version" value="${build.version}" />
				<attribute name="Development-Version" value="${build.dev.version}" />
				<attribute name="Implementation-Date" value="${build.date} ${build.time}" />
			</manifest>
		</jar>
	</target>

	<!-- Building app conf jar to ${dist.dir}/${proj.name}/temp/lib -->
	<target name="build.app.config.jar">
		<!-- Copying conf files present in ${proj.name} project to ${dist.dir}/${proj.name}/temp/conf -->
		<echo message="Copying conf files present in ${proj.name} project to ${dist.dir}/${proj.name}/temp/conf" />
		<copy todir="${dist.dir}/${proj.name}/temp/conf" overwrite="true" verbose="true">
			<fileset dir="${res.dir}">
				<include name="**/*.properties" />
				<type type="file" />
			</fileset>
		</copy>

		<!-- Building the jar -->
		<jar destfile="${dist.dir}/${proj.name}/temp/lib/${proj.name}-${build.version}-config.jar" basedir="${dist.dir}/${proj.name}/temp/conf">
			<include name="**/*.properties" />
			<manifest>
				<attribute name="Implementation-Title" value="${proj.name}-${build.version}-config.jar" />
				<attribute name="Implementation-Vendor" value="${comp.name}" />
				<attribute name="Implementation-Version" value="${build.version}" />
				<attribute name="Development-Version" value="${build.dev.version}" />
				<attribute name="Implementation-Date" value="${build.date} ${build.time}" />
			</manifest>
		</jar>
	</target>

	<!-- Copying app web content to ${dist.dir}/${proj.name}/temp/web -->
	<target name="copy.app.web.content">
		<!-- Copying app web content to ${dist.dir}/${proj.name}/temp/web -->
		<echo message="Copying app web content to ${dist.dir}/${proj.name}/temp/web" />
		<copy todir="${dist.dir}/${proj.name}/temp/web" verbose="true">
			<fileset dir="${web.dir}">
				<include name="**/*.html" />
				<include name="**/*.jsp" />
				<include name="**/*.css" />
				<include name="**/*.js" />
				<include name="**/*.png" />
				<include name="**/*.jpg" />
				<include name="**/*.gif" />
				<include name="**/*.eot" />
				<include name="**/*.svg" />
				<include name="**/*.ttf" />
				<include name="**/*.woff" />
				<include name="**/*.woff2" />
				<include name="**/*.otf" />
			</fileset>
		</copy>
	</target>

	<!-- Extracting core war contents to ${dist.dir}/${proj.name}/temp/war-contents -->
	<target name="extract.core.war">
		<echo message="Extracting core war contents to ${dist.dir}/${proj.name}/temp/war-contents" />
		<unzip dest="${dist.dir}/${proj.name}/temp/war-contents">
			<fileset dir="core-war">
				<include name="core-*.war"/>
			</fileset>
		</unzip>
	</target>

	<!-- Copying core lib content to ${dist.dir}/${proj.name}/temp/lib -->
	<target name="copy.core.lib.content">
		<echo message="Copying core lib content to ${dist.dir}/${proj.name}/temp/lib" />
		<copy todir="${dist.dir}/${proj.name}/temp/lib" verbose="true" overwrite="true">
			<fileset dir="${dist.dir}/${proj.name}/temp/war-contents/WEB-INF/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
	</target>

	<!-- Copying core web content to ${dist.dir}/${proj.name}/temp/web -->
	<target name="copy.core.web.content">
		<echo message="Copying core web content to ${dist.dir}/${proj.name}/temp/web" />
		<copy todir="${dist.dir}/${proj.name}/temp/web" verbose="true" overwrite="true">
			<fileset dir="${dist.dir}/${proj.name}/temp/war-contents">
				<include name="**/*.html" />
				<include name="**/*.jsp" />
				<include name="**/*.css" />
				<include name="**/*.js" />
				<include name="**/*.png" />
				<include name="**/*.jpg" />
				<include name="**/*.gif" />
				<include name="**/*.eot" />
				<include name="**/*.svg" />
				<include name="**/*.ttf" />
				<include name="**/*.woff" />
				<include name="**/*.woff2" />
				<include name="**/*.otf" />
			</fileset>
		</copy>
	</target>


	<!-- Building app war to ${dist.dir}/${proj.name}/war -->
	<target name="build.app.war">
		<war warfile="${dist.dir}/${proj.name}/war/${proj.name}-${build.version}.war" webxml="${dist.dir}/${proj.name}/temp/war-contents/WEB-INF/web.xml">
			<lib dir="${dist.dir}/${proj.name}/temp/lib">
				<include name="**/*.jar" />
				<exclude name="javax.servlet_1.0.1.0_2-5.jar" />
				<exclude name="*core*-config.jar" />
				<exclude name="*core*-generator.jar" />
			</lib>
			<fileset dir="${dist.dir}/${proj.name}/temp/web">
				<include name="**/*.html" />
				<include name="**/*.jsp" />
				<include name="**/*.css" />
				<include name="**/*.js" />
				<include name="**/*.png" />
				<include name="**/*.jpg" />
				<include name="**/*.gif" />
				<include name="**/*.eot" />
				<include name="**/*.svg" />
				<include name="**/*.ttf" />
				<include name="**/*.woff" />
				<include name="**/*.woff2" />
				<include name="**/*.otf" />
			</fileset>
			<manifest>
				<attribute name="Implementation-Title" value="${proj.name}-${build.version}.war" />
				<attribute name="Implementation-Vendor" value="${comp.name}" />
				<attribute name="Implementation-Version" value="${build.version}" />
				<attribute name="Development-Version" value="${build.dev.version}" />
				<attribute name="Implementation-Date" value="${build.date} ${build.time}" />
			</manifest>
		</war>
	</target>

	<!--Copying db scripts (if any) to ${dist.dir}/${proj.name}/db-->
	<target name="copy.db.scripts" depends="db.scripts.dir.check, do.copy.db.scripts, dont.copy.db.scripts">
	</target>

	<target name="do.copy.db.scripts" depends="db.scripts.dir.check" if="db.scripts.dir.exists">
		<copy todir="${dist.dir}/${proj.name}/db" verbose="true">
			<fileset dir="${sql.dir}/${build.version}">
				<include name="**/*.sql" />
			</fileset>
		</copy>
	</target>

	<target name="dont.copy.db.scripts" depends="db.scripts.dir.check" unless="db.scripts.dir.exists">
		<echo>${sql.dir}/${build.version} missing</echo>
		<echo file="${dist.dir}/${proj.name}/db/no-db-changes.txt">Version ${build.version} do not have any database changes.</echo>
	</target>

	<target name="db.scripts.dir.check">
		<condition property="db.scripts.dir.exists">
			<available file="${sql.dir}/${build.version}" type="dir" />
		</condition>
	</target>

	<target name="copy.readme.txt">
		<copy todir="${dist.dir}/${proj.name}" verbose="true">
			<fileset dir=".">
				<include name="readme.txt" />
			</fileset>
		</copy>
	</target>

	<target name="copy.license">
		<copy todir="${dist.dir}/${proj.name}" verbose="true">
			<fileset dir="..">
				<include name="LICENSE" />
			</fileset>
		</copy>
	</target>

	<!--FOR DEV-->
	<target name="dev.copy.war">
		<property environment="env" />
		<delete dir="${env.CATALINA_HOME}/webapps/${proj.name}" />
		<copy file="${dist.dir}/${proj.name}/war/${proj.name}-${build.version}.war" tofile="${env.CATALINA_HOME}/webapps/test.war" verbose="true" />
		<copy file="${dist.dir}/${proj.name}/war/${proj.name}-client-${build.version}.war" tofile="${env.CATALINA_HOME}/webapps/testclient.war" verbose="true" />
	</target>
	<!--FOR DEV-->
</project>